import java.io.IOException;
import java.util.HashMap;

public class Driver {
	
	 
	 static MetroMapParser mmp;
	 
	 
   public static void main(String[] args) {
	   
      
	   try {
		   mmp = new MetroMapParser("bostonmetro.txt");
		} catch (IOException e) {
			//Probably wrong filepath... Derp
			//We should not get this point so might as well crash if we do.
		//	quit();
			e.printStackTrace();
		}

	   try {
		   mmp.generateGraphFromFile();
	   } catch (Exception e) {
		   e.printStackTrace();
	   }
	   
	   MetroSystem ms = new MetroSystem(mmp.getNumNodes());
	   
	   //Filling the graph in from the parser
	   for(int i = 0; i < mmp.getNumNodes(); i++){
		   for(int j = 0; j < mmp.getInID(i).size(); j++){
			   ms.BostonMS.addEdge(mmp.getInID(i).get(j), mmp.getStationID(i), mmp.getColours(i).get(j));
			   ms.BostonMS.addEdge(mmp.getOutID(i).get(j), mmp.getStationID(i), mmp.getColours(i).get(j));
			   ms.BostonMS.addNode(mmp.getStationID(i), mmp.getStationName(i));
		   }
	   }
	   HashMap<Integer, Station> stationList = ms.BostonMS.getStationList();
	   
//	   for(int i = 0; i <= stationList.size(); i++){
//		   System.out.println(stationList.get(i).getName());
//		   
//		   // compare the userinput with the station.getName
//	   }
	   //Testing Code
	   System.out.println("number of edges " + ms.BostonMS.nEdges());
	   
	   for(int i = 1 ; i <= ms.BostonMS.getStationList().size(); i++){
		   INode s = ms.BostonMS.getNode(i);
		   System.out.println(s.getId() + " "+ s.getName());
		   if (userinput.equals(s.getName()){
			   //User is not stupid and input is correct
		   }
	   }	  
	   
	   
	//   for(INode n: ms.BostonMS.search(1, 3)){
	//	   System.out.println(n.getId() + " " + n.getName());
		   
	//   }
//	   System.out.println("Finished");
	   
	   //End of testing code
	   
	 //  MetroSystem ms_copy = ms;
	  // new Menu(ms_copy);
   }

   
   }
